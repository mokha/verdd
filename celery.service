[Unit]
Description=Celery Service
After=network.target

[Service]
Type=forking
WorkingDirectory=/PATH_TO_PROJECT/verdd/
EnvironmentFile=/PATH_TO_PROJECT/verdd/.env
Environment="CELERY_BIN=/PATH_TO_PROJECT/verdd/venv/bin/celery"
Environment="CELERY_APP=verdd"
Environment="CELERYD_NODES=worker"
Environment="CELERYD_PID_FILE=/var/run/celery/%n.pid"
Environment="CELERYD_LOG_FILE=/var/log/celery/%n.log"
Environment="CELERYD_LOG_LEVEL=INFO"
Environment="CELERYD_OPTS=--time-limit=300 --concurrency=4"

Environment="DJANGO_SETTINGS_MODULE=verdd.settings.production"

ExecStart=/bin/sh -c '${CELERY_BIN} multi start ${CELERYD_NODES} \
  -A ${CELERY_APP} --pidfile=${CELERYD_PID_FILE} \
  --logfile=${CELERYD_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL} ${CELERYD_OPTS}'

ExecStop=/bin/sh -c '${CELERY_BIN} multi stopwait ${CELERYD_NODES} \
  --pidfile=${CELERYD_PID_FILE}'

ExecReload=/bin/sh -c '${CELERY_BIN} multi restart ${CELERYD_NODES} \
  -A ${CELERY_APP} --pidfile=${CELERYD_PID_FILE} \
  --logfile=${CELERYD_LOG_FILE} --loglevel=${CELERYD_LOG_LEVEL} ${CELERYD_OPTS}'

# Ensure the service always restarts if it fails
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target

